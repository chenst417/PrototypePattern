一：原型模式

	定义：
		原型实例指定创建对象的种类，并通过拷贝这些原型实例来创建新的对象。
			属于创建型模式
	特点：
		a:调用者不需要知道任何的创建细节，也不需要调用构造函数
	优点：
		a:当创建一个对象比较复杂的时候，使用原型模式可以简化对象的创建过程，
			通过复制一个已有对象的实例可以提高对象的创建效率。
		b：
	缺点：
	  	a：需要为每一个类配置一个克隆方法，而且该克隆方法位于类的内部，
	  		当对已有类进行改造的时候，需要修改代码，违背了开闭原则
	  	b:在实现深克隆的时候需要编写较为复杂的代码，而且当对象之间存在多重嵌套引用时，
	  		为了实现深克隆，每一层对象对应的类都不想支持深克隆，实现起来比较麻烦。
	应用案例：

	应用场景：
		a:类的初始化消耗的资源较多
		b:new一个对象的过程比较繁琐(数据准备、访问权限)
		c:构造函数比较复杂
		d:循环体中产生大量的对象

	浅克隆：
		使用一个已知的实例，对新创建的对象进行逐个赋值
	深克隆：
		在克隆的时候，不仅要复制非引用类型的数据，还有对引用类型的数据进行实例化，并进行赋值。